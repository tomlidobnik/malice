{"ast":null,"code":"import dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\nexport default {\n  name: \"CalendarMonth\",\n  components: {\n    CalendarMonthDayItem,\n    CalendarDateIndicator,\n    CalendarDateSelector,\n    CalendarWeekdays\n  },\n  data() {\n    return {\n      selectedDate: dayjs(),\n      selectedWeek: 1\n    };\n  },\n  computed: {\n    days() {\n      return [...this.previousMonthDays, ...this.currentMonthDays, ...this.nextMonthDays];\n    },\n    today() {\n      return dayjs().format(\"YYYY-MM-DD\");\n    },\n    month() {\n      return Number(this.selectedDate.format(\"M\"));\n    },\n    year() {\n      return Number(this.selectedDate.format(\"YYYY\"));\n    },\n    numberOfDaysInMonth() {\n      return dayjs(this.selectedDate).daysInMonth();\n    },\n    currentMonthDays() {\n      return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\n        return {\n          date: dayjs(`${this.year}-${this.month}-${index + 1}`).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: true\n        };\n      });\n    },\n    previousMonthDays() {\n      const firstDayOfTheMonthWeekday = this.getWeekday(this.currentMonthDays[0].date);\n      const previousMonth = dayjs(`${this.year}-${this.month}-01`).subtract(1, \"month\");\n\n      // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n      const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday ? firstDayOfTheMonthWeekday - 1 : 6;\n      const previousMonthLastMondayDayOfMonth = dayjs(this.currentMonthDays[0].date).subtract(visibleNumberOfDaysFromPreviousMonth, \"day\").date();\n      return [...Array(visibleNumberOfDaysFromPreviousMonth)].map((day, index) => {\n        return {\n          date: dayjs(`${previousMonth.year()}-${previousMonth.month() + 1}-${previousMonthLastMondayDayOfMonth + index}`).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    },\n    nextMonthDays() {\n      const lastDayOfTheMonthWeekday = this.getWeekday(`${this.year}-${this.month}-${this.currentMonthDays.length}`);\n      const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(1, \"month\");\n      const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday ? 7 - lastDayOfTheMonthWeekday : lastDayOfTheMonthWeekday;\n      return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n        return {\n          date: dayjs(`${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    }\n  },\n  methods: {\n    getWeekday(date) {\n      return dayjs(date).weekday();\n    },\n    selectDate(newSelectedDate) {\n      this.selectedDate = newSelectedDate;\n    },\n    handleDayChange(date) {\n      this.$emit(\"calendar-date-change\", date);\n    }\n  }\n};","map":{"version":3,"names":["dayjs","weekday","weekOfYear","CalendarMonthDayItem","CalendarDateIndicator","CalendarDateSelector","CalendarWeekdays","extend","name","components","data","selectedDate","selectedWeek","computed","days","previousMonthDays","currentMonthDays","nextMonthDays","today","format","month","Number","year","numberOfDaysInMonth","daysInMonth","Array","map","day","index","date","isCurrentMonth","firstDayOfTheMonthWeekday","getWeekday","previousMonth","subtract","visibleNumberOfDaysFromPreviousMonth","previousMonthLastMondayDayOfMonth","lastDayOfTheMonthWeekday","length","nextMonth","add","visibleNumberOfDaysFromNextMonth","methods","selectDate","newSelectedDate","handleDayChange","$emit"],"sources":["/Users/tom/malice/frontend/src/components/CalendarMonth.vue"],"sourcesContent":["<template>\n    <div class=\"calendar-month\">\n        <div class=\"calendar-month-header\">\n            <CalendarDateIndicator\n                :selected-date=\"selectedDate\"\n                class=\"calendar-month-header-selected-month\" />\n\n            <CalendarDateSelector\n                :current-date=\"today\"\n                :selected-date=\"selectedDate\"\n                @dateSelected=\"selectDate\" />\n        </div>\n\n        <CalendarWeekdays />\n\n        <ol class=\"days-grid\">\n            <CalendarMonthDayItem\n                @date-change=\"handleDayChange\"\n                v-for=\"day in days\"\n                :key=\"day.date\"\n                :day=\"day\"\n                :is-today=\"day.date === today\" />\n        </ol>\n    </div>\n</template>\n\n<script>\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\n\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n\nexport default {\n    name: \"CalendarMonth\",\n\n    components: {\n        CalendarMonthDayItem,\n        CalendarDateIndicator,\n        CalendarDateSelector,\n        CalendarWeekdays,\n    },\n\n    data() {\n        return {\n            selectedDate: dayjs(),\n            selectedWeek: 1,\n        };\n    },\n\n    computed: {\n        days() {\n            return [\n                ...this.previousMonthDays,\n                ...this.currentMonthDays,\n                ...this.nextMonthDays,\n            ];\n        },\n\n        today() {\n            return dayjs().format(\"YYYY-MM-DD\");\n        },\n\n        month() {\n            return Number(this.selectedDate.format(\"M\"));\n        },\n\n        year() {\n            return Number(this.selectedDate.format(\"YYYY\"));\n        },\n\n        numberOfDaysInMonth() {\n            return dayjs(this.selectedDate).daysInMonth();\n        },\n\n        currentMonthDays() {\n            return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\n                return {\n                    date: dayjs(\n                        `${this.year}-${this.month}-${index + 1}`\n                    ).format(\"YYYY-MM-DD\"),\n                    isCurrentMonth: true,\n                };\n            });\n        },\n\n        previousMonthDays() {\n            const firstDayOfTheMonthWeekday = this.getWeekday(\n                this.currentMonthDays[0].date\n            );\n            const previousMonth = dayjs(\n                `${this.year}-${this.month}-01`\n            ).subtract(1, \"month\");\n\n            // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n            const visibleNumberOfDaysFromPreviousMonth =\n                firstDayOfTheMonthWeekday ? firstDayOfTheMonthWeekday - 1 : 6;\n\n            const previousMonthLastMondayDayOfMonth = dayjs(\n                this.currentMonthDays[0].date\n            )\n                .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\n                .date();\n\n            return [...Array(visibleNumberOfDaysFromPreviousMonth)].map(\n                (day, index) => {\n                    return {\n                        date: dayjs(\n                            `${previousMonth.year()}-${\n                                previousMonth.month() + 1\n                            }-${previousMonthLastMondayDayOfMonth + index}`\n                        ).format(\"YYYY-MM-DD\"),\n                        isCurrentMonth: false,\n                    };\n                }\n            );\n        },\n\n        nextMonthDays() {\n            const lastDayOfTheMonthWeekday = this.getWeekday(\n                `${this.year}-${this.month}-${this.currentMonthDays.length}`\n            );\n\n            const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(\n                1,\n                \"month\"\n            );\n\n            const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\n                ? 7 - lastDayOfTheMonthWeekday\n                : lastDayOfTheMonthWeekday;\n\n            return [...Array(visibleNumberOfDaysFromNextMonth)].map(\n                (day, index) => {\n                    return {\n                        date: dayjs(\n                            `${nextMonth.year()}-${nextMonth.month() + 1}-${\n                                index + 1\n                            }`\n                        ).format(\"YYYY-MM-DD\"),\n                        isCurrentMonth: false,\n                    };\n                }\n            );\n        },\n    },\n\n    methods: {\n        getWeekday(date) {\n            return dayjs(date).weekday();\n        },\n        selectDate(newSelectedDate) {\n            this.selectedDate = newSelectedDate;\n        },\n        handleDayChange(date) {\n            this.$emit(\"calendar-date-change\", date);\n        },\n    },\n};\n</script>\n\n<style scoped>\n.calendar-month {\n    position: relative;\n    background-color: var(--grey-200);\n    border: ridge 0.125rem black;\n    min-width: 18.75rem;\n    max-width: 25rem;\n    height: fit-content;\n    margin-top: 1.5rem;\n}\n\n.day-of-week {\n    color: var(--grey-800);\n    font-size: 1.125rem;\n    background-color: #fff;\n    padding-bottom: 0.3125rem;\n    padding-top: 0.625rem;\n}\n\n.day-of-week,\n.days-grid {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n}\n\n.day-of-week > * {\n    text-align: right;\n    padding-right: 5px;\n}\n\n.days-grid {\n    height: auto;\n    position: relative;\n    grid-column-gap: var(--grid-gap);\n    grid-row-gap: var(--grid-gap);\n    border-top: solid 1px black;\n}\n@media (max-width: 1500px) {\n    .calendar-month {\n        margin: 0 auto;\n    }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}