{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", {\n    class: _normalizeClass([\"calendar-day\", {\n      'calendar-day--not-current': !$props.day.isCurrentMonth,\n      'calendar-day--today': $props.isToday,\n      'calendar-day--free': $options.isFree\n    }]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleDateChange && $options.handleDateChange(...args))\n  }, [_createElementVNode(\"span\", null, _toDisplayString($options.label), 1)], 2);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","day","isCurrentMonth","isToday","$options","isFree","onClick","_cache","args","handleDateChange","_createElementVNode","_toDisplayString","label"],"sources":["/Users/tom/malice/frontend/src/components/CalendarMonthDayItem.vue"],"sourcesContent":["<template>\n    <li\n        class=\"calendar-day\"\n        :class=\"{\n            'calendar-day--not-current': !day.isCurrentMonth,\n            'calendar-day--today': isToday,\n            'calendar-day--free': isFree,\n        }\"\n        @click=\"handleDateChange\">\n        <span>{{ label }}</span>\n    </li>\n</template>\n\n<script>\nimport dayjs from \"dayjs\";\n\nexport default {\n    name: \"CalendarMonthDayItem\",\n\n    props: {\n        day: {\n            type: Object,\n            required: true,\n        },\n\n        isCurrentMonth: {\n            type: Boolean,\n            default: false,\n        },\n\n        isToday: {\n            type: Boolean,\n            default: false,\n        },\n        holidays: {\n            type: Array,\n            // Defining holidays\n            default: () => [\n                \"01-01\",\n                \"02-01\",\n                \"08-02\",\n                \"27-04\",\n                \"01-05\",\n                \"02-05\",\n                \"25-06\",\n                \"01-11\",\n                \"26-12\",\n                \"15-09\",\n                \"25-12\",\n                \"31-10\",\n            ],\n        },\n    },\n\n    computed: {\n        label() {\n            return dayjs(this.day.date).format(\"D\");\n        },\n        isFree() {\n            const dayOfWeek = dayjs(this.day.date).day();\n            if (dayOfWeek === 0 || dayOfWeek === 6) return true;\n            const currentDateFormatted = dayjs(this.day.date).format(\"DD-MM\");\n            if (this.holidays.includes(currentDateFormatted)) return true;\n            const year = dayjs(this.day.date).year();\n            const firstDayOfApril = dayjs(new Date(year, 3, 1));\n            let firstMondayOfApril = firstDayOfApril;\n            if (firstDayOfApril.day() !== 1) {\n                firstMondayOfApril = firstDayOfApril.add(\n                    (8 - firstDayOfApril.day()) % 7,\n                    \"day\"\n                );\n            }\n            const firstMondayOfAprilFormatted =\n                firstMondayOfApril.format(\"DD-MM\");\n            return currentDateFormatted === firstMondayOfAprilFormatted;\n        },\n    },\n\n    methods: {\n        handleDateChange() {\n            this.$emit(\"date-change\", {\n                year: dayjs(this.day.date).year(),\n                week: dayjs(this.day.date).week(),\n            });\n        },\n    },\n};\n</script>\n\n<style scoped>\n.calendar-day {\n    display: inline;\n    position: relative;\n    min-height: 20px;\n    font-size: 16px;\n    background-color: #fff;\n    color: var(--grey-800);\n    padding: 5px;\n    cursor: pointer;\n}\n\n.calendar-day > span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    right: 2px;\n    width: var(--day-label-size);\n    height: var(--day-label-size);\n}\n\n.calendar-day--not-current {\n    background-color: var(--grey-100);\n}\n\n.calendar-day--today {\n    padding-top: 4px;\n}\n\n.calendar-day--today > span {\n    color: #fff;\n    border-radius: 9999px;\n    padding: 2px;\n    background-color: var(--grey-800);\n}\n.calendar-day--free {\n    background-color: var(--free-day-bg);\n}\n</style>\n"],"mappings":";;uBACIA,mBAAA,CASK;IARDC,KAAK,EAFbC,eAAA,EAEc,cAAc;oCACgCC,MAAA,CAAAC,GAAG,CAACC,cAAc;6BAAqCF,MAAA,CAAAG,OAAO;4BAAoCC,QAAA,CAAAC;;IAKrJC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,gBAAA,IAAAL,QAAA,CAAAK,gBAAA,IAAAD,IAAA,CAAgB;MACxBE,mBAAA,CAAwB,cAAAC,gBAAA,CAAfP,QAAA,CAAAQ,KAAK,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}